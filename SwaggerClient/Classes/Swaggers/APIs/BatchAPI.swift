//
// BatchAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class BatchAPI: APIBase {
    /**
     Submit a batch of requests as an array of input models
     
     - parameter batchRequest: (body) batchRequest 
     - parameter customerId: (query) customerId 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func batchUsingPOST(batchRequest batchRequest: DataCollectorBatchRequest, customerId: String, completion: ((error: ErrorType?) -> Void)) {
        batchUsingPOSTWithRequestBuilder(batchRequest: batchRequest, customerId: customerId).execute { (response, error) -> Void in
            completion(error: error);
        }
    }


    /**
     Submit a batch of requests as an array of input models
     - POST /v2/batch
     - For this to work, you will need to specify the value of the request_type field of each element in the list, which indicates the type of the element. For example, to submit a batch containing a DataCollectorNewUserRequest you would specify the value `newUser` as the request_type for your DataCollectorNewUserRequest element. Convention is DataCollectorSomeTypeRequest -> someType (DataCollectorNewUserRequest -> newUser, DataCollectorNewDeviceRequest -> newDevice, etc
     
     - parameter batchRequest: (body) batchRequest 
     - parameter customerId: (query) customerId 

     - returns: RequestBuilder<Void> 
     */
    public class func batchUsingPOSTWithRequestBuilder(batchRequest batchRequest: DataCollectorBatchRequest, customerId: String) -> RequestBuilder<Void> {
        let path = "/v2/batch"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = batchRequest.encodeToJSON() as? [String:AnyObject]
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
